(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{1116:function(e,t,s){"use strict";s.r(t);var a=s(19),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"theming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#theming"}},[e._v("#")]),e._v(" Theming")]),e._v(" "),a("p",[e._v("Vue Formulate is completely agnostic about the styling you choose to apply to\nyour form inputs, but has been intentionally designed to be easy to write\nstyles for. Vue Formulate provides functionality for each of the major\ningredients in theming, including:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/guide/theming/customizing-classes"}},[e._v("Customizing classes")]),e._v(" (since 2.4)")]),e._v(" "),a("li",[a("a",{attrs:{href:"/guide/inputs/slots"}},[e._v("Changing DOM structure")]),e._v(" (since 2.3)")]),e._v(" "),a("li",[a("a",{attrs:{href:"/guide/theming/styling-tips"}},[e._v("Writing custom styles")])])]),e._v(" "),a("h2",{attrs:{id:"default-theme"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-theme"}},[e._v("#")]),e._v(" Default theme")]),e._v(" "),a("p",[e._v('By default, the package contains the SCSS and compiled CSS for a single theme\n(named "snow"). It’s the one you see on this documentation site. You can import\nthe SCSS directly into your own SCSS, or just use the minified CSS directly.')]),e._v(" "),a("h4",{attrs:{id:"import-the-scss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-the-scss"}},[e._v("#")]),e._v(" Import the SCSS")]),e._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// scss/main.scss")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@import")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'../node_modules/@braid/vue-formulate/themes/snow/snow.scss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h4",{attrs:{id:"css-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-file"}},[e._v("#")]),e._v(" CSS File")]),e._v(" "),a("p",[e._v("The distribution of the snow theme is available in the repository for download\nand inclusion.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/wearebraid/vue-formulate/blob/master/dist/snow.min.css",target:"_blank",rel:"noopener noreferrer"}},[e._v("View CSS on Github"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"contributing-themes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributing-themes"}},[e._v("#")]),e._v(" Contributing themes")]),e._v(" "),a("p",[e._v("We would love to see community contributed themes for Vue Formulate! If you’ve\ncreate a your own masterpiece — please share it by "),a("a",{attrs:{href:"https://github.com/wearebraid/vue-formulate/issues/new?assignees=&labels=feature+request&template=feature_request.md&title=I%E2%80%99d%20like%20to%20contribute%20a%20theme!",target:"_blank",rel:"noopener noreferrer"}},[e._v("opening an issue"),a("OutboundLink")],1),e._v(" on github\nto let us know about it and we may list it on this documentation page.")]),e._v(" "),a("h2",{attrs:{id:"specimen-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specimen-page"}},[e._v("#")]),e._v(" Specimen page")]),e._v(" "),a("p",[e._v("Vue Formulate includes a specimen page of every input type for use in styling\nand theming. To use it first clone Vue Formulate, install, and run dev:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone git@github.com:wearebraid/vue-formulate.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run dev\n")])])]),a("p",[e._v("Open the provided URL in the browser and you should see each input type broken\nout by its classification.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(855),alt:"Screenshot of all inputs by classification"}})])])}),[],!1,null,null,null);t.default=n.exports},855:function(e,t,s){e.exports=s.p+"assets/img/specimen.ac4b84ce.png"}}]);